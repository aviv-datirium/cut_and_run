Instructions:

The pipeline inside the docker container gets all paths from a json config file.
Prerequisites:
1) a STAR-indexed human genome (Human genome dowloaded from here: https://hgdownload.soe.ucsc.edu/goldenPath/hg38/bigZips/hg38.fa.gz)
2) a STAR-indexed E. coli genome (Downloaded from here: https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/005/845/GCF_000005845.2_ASM584v2/GCF_000005845.2_ASM584v2_genomic.fna.gz)
3) hg38.chrom.sizes (get it here: https://hgdownload.soe.ucsc.edu/goldenpath/hg38/bigZips/)
4) hg38 annotation file (https://hgdownload.soe.ucsc.edu/goldenPath/hg38/bigZips/genes/hg38.refGene.gtf.gz) unzipped
5) a single directory with all your fastq.gz files
6) place the STAR indices in a directory with the following structure and names:
star_indices/
├── ecoli_canonical
└── hg38
 
1) create a new directory and cd to it. This is where your output will be placed.
2) place the config_for_macs2_cwl.json in this directory
3) run the following command:

docker run --rm -it \
  -v /full/path/to/config_for_macs2_cwl.json:/project/config_for_docker.json:ro \
  -v /full/path/to/fastq:/project/fastq:ro \
  -v /full/path/to/star_indices:/project/star_indices:ro \
  -v /full/path/to/chrom:/project/chrom:ro \
  -v /full/path/to/annotation:/project/annotation:ro \
  -v /full/path/to/output_replicates:/project/output_replicates \
  --workdir /project \
  biowardrobe2/cutrun-macs2-core:latest \
  bash -c "bash /usr/local/bin/cutrun.sh config_for_docker.json"
  
What each piece does:

    mydockerhubuser/cutrun-macs2-core:latest
    This is your remote image name. Replace mydockerhubuser with your Docker Hub (or registry) namespace and the tag you pushed (e.g. v1.0.0).

    -v host_path:container_path:ro
    Mounts in read-only mode:

        Your JSON config → /project/config_for_docker.json

        FASTQs → /project/fastq

        STAR indices → /project/star_indices

        Chromosome sizes → /project/chrom

        GTF annotation → /project/annotation

    -v /full/path/to/output_replicates:/project/output_replicates
    Mounts an output folder so that everything the pipeline writes under output_replicates/ in the container shows up on your host.

    --workdir /project
    Ensures the container’s PWD is /project, so relative paths in your JSON just work.

    bash -c "bash /usr/local/bin/cutrun.sh config_for_docker.json"
    Invokes the built-in pipeline entrypoint inside the image, pointing it at the JSON you just mounted.
