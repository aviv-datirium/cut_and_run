#########################################################################################################################
# Modified Dockerfile for CUT&RUN Pipeline
# Based on: biowardrobe2/bulk-tools:v0.0.1
#########################################################################################################################

FROM condaforge/miniforge3:25.3.0-3
LABEL maintainer="aviv.de.morgan@datirium.com"

ENV DEBIAN_FRONTEND=noninteractive
ENV HOME=/tmp
ENV USER=nobody

WORKDIR /tmp

# Set tool versions
ENV TRIMGALORE_VERSION=0.6.10
ENV SAMTOOLS_VERSION=1.22
ENV MACS2_VERSION=2.2.9.1
ENV BEDTOOLS_VERSION=2.31.1
ENV UCSC_APPS_VERSION=481
ENV R_BASE_VERSION=4.4.3
ENV FILE_VERSION=5.46
ENV UNZIP_VERSION=6.0
ENV CUTADAPT_VERSION=4.1
ENV STAR_VERSION=2.7.11b
ENV PICARD_VERSION=2.27
ENV FASTQC_VERSION=0.12.1
ENV JQ_VERSION=1.7

SHELL ["/bin/bash", "-c"]

# Install all tools into one conda environment

RUN mamba create -y -n cutrun \
    bioconda::trim-galore=${TRIMGALORE_VERSION} \
    bioconda::samtools=${SAMTOOLS_VERSION} \
    bioconda::macs2 \
    bioconda::bedtools=${BEDTOOLS_VERSION} \
    bioconda::ucsc-bedgraphtobigwig=${UCSC_APPS_VERSION} \
    bioconda::ucsc-bedclip \
    conda-forge::r-base=${R_BASE_VERSION} \
    conda-forge::file=${FILE_VERSION} \
    conda-forge::unzip=${UNZIP_VERSION} \
    bioconda::cutadapt=${CUTADAPT_VERSION} \
    bioconda::star=${STAR_VERSION} \
    bioconda::picard=${PICARD_VERSION} \
    bioconda::fastqc=${FASTQC_VERSION} \
    conda-forge::jq=${JQ_VERSION} && \
    mamba clean -a -y && \
    apt-get clean && \
    apt-get autoremove -y && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        pigz \
        parallel && \
    apt-get clean && \
    apt-get autoremove -y && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

ENV PATH=/opt/conda/envs/cutrun/bin:$PATH

# Copy pipeline script
COPY ./scripts/macs2_cutnrun_pipeline_w_replicates_for_docker.sh /usr/local/bin/cutrun.sh
RUN chmod +x /usr/local/bin/cutrun.sh

# Copy the custom entrypoint script into the image
COPY docker_entrypoint.sh /usr/local/bin/docker_entrypoint.sh
RUN chmod +x /usr/local/bin/docker_entrypoint.sh

# Set the entrypoint
ENTRYPOINT ["/usr/local/bin/docker_entrypoint.sh"]

# Optional: Copy default config if needed
#COPY ./config_for_macs2_docker.json ./
