#########################################################################################################################
# Modified Dockerfile for CUT&RUN Pipeline
# Based on: biowardrobe2/bulk-tools:v0.0.1
#
# BUILD:
# docker build --platform linux/amd64 --no-cache --rm -f /path/to/cutandrun-macs2-Dockerfile -t cutrun-macs2-core:latest .
#
# TEST RUN IN INTERACTIVE MODE:
# docker run --rm -it \
#  -v "$PWD/macs2_cutnrun_pipeline_w_replicates_for_docker.sh":/tmp/real_pipeline.sh:ro \
#  -v "$PWD":/project \
#  -v /path/to/fastq:/project/fastq:ro \
#  --workdir /project \
# --entrypoint /bin/bash \
# cutrun-macs2-core:latest
#
# and run:
# fastqc \
#  /project/path/to/read1.fastq.gz \
#  --outdir /tmp/ \
#  --threads 2
#########################################################################################################################

FROM ubuntu:jammy
LABEL maintainer="aviv.de.morgan@datirium.com"

ENV DEBIAN_FRONTEND=noninteractive
ENV HOME=/tmp
ENV USER=nobody
WORKDIR /tmp

# Set tool versions
ENV TRIMGALORE_VERSION=0.6.10 \
    SAMTOOLS_VERSION=1.22 \
    MACS2_VERSION=2.2.9.1 \
    BEDTOOLS_VERSION=2.31.1 \
    UCSC_APPS_VERSION=481 \
    R_BASE_VERSION=4.4.3 \
    FILE_VERSION=5.46 \
    UNZIP_VERSION=6.0 \
    CUTADAPT_VERSION=4.1 \
    STAR_VERSION=2.7.11b \
    PICARD_VERSION=2.27 \
    FASTQC_VERSION=0.12.1 \
    JQ_VERSION=1.7 \
    PRESEQ_VERSION=3.2.0

SHELL ["/bin/bash", "-c"]

# Install OS dependencies
RUN sed -i 's|http://|https://|g' /etc/apt/sources.list && \
    apt-get update && apt-get install -y --no-install-recommends \
    wget curl bzip2 ca-certificates git gnupg \
    libglib2.0-0 libxext6 libsm6 libxrender1 \
    libssl-dev build-essential pigz parallel && \
    rm -rf /var/lib/apt/lists/*

# Install Miniforge
RUN wget https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh -O /tmp/miniforge.sh && \
    bash /tmp/miniforge.sh -b -p /opt/conda && \
    rm /tmp/miniforge.sh && \
    /opt/conda/bin/conda clean -afy

ENV PATH=/opt/conda/bin:$PATH

# Create and populate conda env with all tools
RUN conda create -y -n cutrun python=3.10 && \
    /opt/conda/bin/conda run -n cutrun mamba install -y -c bioconda -c conda-forge \
        trim-galore=${TRIMGALORE_VERSION} \
        samtools=${SAMTOOLS_VERSION} \
        bedtools=${BEDTOOLS_VERSION} \
        ucsc-bedgraphtobigwig=${UCSC_APPS_VERSION} \
        cutadapt=${CUTADAPT_VERSION} \
        star=${STAR_VERSION} \
        picard=${PICARD_VERSION} \
        fastqc=${FASTQC_VERSION} \
        macs2=${MACS2_VERSION} \
        r-base=${R_BASE_VERSION} \
        file=${FILE_VERSION} \
        unzip=${UNZIP_VERSION} \
        jq=${JQ_VERSION} \
        preseq=${PRESEQ_VERSION} \
    && conda clean -afy

# Auto-activate the conda env at startup
RUN echo ". /opt/conda/etc/profile.d/conda.sh && conda activate cutrun" >> /root/.bashrc
ENV CONDA_DEFAULT_ENV=cutrun
ENV PATH=/opt/conda/envs/cutrun/bin:$PATH

# Copy pipeline script
COPY ./scripts/macs2_cutnrun_pipeline_w_replicates_for_docker.sh /usr/local/bin/cutrun.sh
RUN chmod +x /usr/local/bin/cutrun.sh

# Copy entrypoint script
COPY docker_entrypoint.sh /usr/local/bin/docker_entrypoint.sh
RUN chmod +x /usr/local/bin/docker_entrypoint.sh

ENTRYPOINT ["/usr/local/bin/docker_entrypoint.sh"]
